opsin:
  requires:
    - python_deploy_base
  description: IUPAC nomenclature parser, see doi:10.1021/ci100384d
  build: |
    RUN conda install -qy -c bioconda opsin=2.1.0


ambertools:
  requires:
    - miniconda
  build: |
    RUN apt-get update \
     && apt-get install --no-install-recommends -y libgfortran3 \
     && apt-get -y clean && apt-get autoremove -y --purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    RUN python -c "print('name = molecular-design-toolkit-builder\ninstitution = Autodesk\ncity = San Francisco\nstate or province = CA\ncountry = USA')" > /root/.amberrc
    RUN conda install -qy -c ambermd ambertools=16.21.1
    ENV AMBERHOME=/opt/conda/

nucleic_acid_builder:
  requires:
   - ambertools
  build: |
    RUN apt-get update \
     && apt-get install --no-install-recommends -y gcc gfortran libfftw3-dev libnetcdf-dev \
     && apt-get -y clean && apt-get autoremove -y --purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


dssp:
  requires:
   - python_deploy_base
  description: Protein secondary structure analysis
  build: |
    conda install -qy -c salilab dssp=2.2.1


edtsurf:
  description: Molecular surface calculator
  requires:
    - base
  build: |
      RUN apt-get update \
      && apt-get install -y --no-install-recommends wget \
      && cd /usr/local/bin \
      && wget http://zhanglab.ccmb.med.umich.edu/EDTSurf/EDTSurf \
      && chmod +x EDTSurf \
      && apt-get -y clean \
      && apt-get autoremove -y --purge \
      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


nbo: # This ISN'T open source - we'll provide the dockerfile, but users must supply the source code
 requires:
  - buildbase
 build_directory: buildfiles/nbo6_0
 build: |
  ADD nbo6.0-src.tar.gz /opt/
  RUN cd /opt/nbo6 && sed -i.orig -e 's/NBODIR = \~\/nbo6/NBODIR = \/opt\/nbo6/g' Make.config
  RUN cd /opt/nbo6 && make
  RUN ln -s /opt/nbo6/bin/*.exe /usr/local/bin/
  ENV NBOEXE=/opt/nbo6/bin/nbo6.i4.exe


gamess:
 requires:
  - buildbase
 build_directory: buildfiles/gamess
 build: |
  RUN apt-get install -y libatlas-base-dev
  ADD gamess-current.tar.gz /opt
  ADD config.tar /opt
  RUN cd /opt/gamess/ddi \
   && ./compddi | tee compddi.log \
   && mv ddikick.x .. \
   && cd /opt/gamess \
   && ./compall | tee compall.log \
   && ./lked gamess 00 | tee lked.log \
   && mkdir -p /scr/root /root/scr \
   && ln -s /opt/gamess/rungms /usr/local/bin/rungms
