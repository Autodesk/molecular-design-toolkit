_ALL_:
 - ambertools
 - opsin
 - symmol
 - openmm
 - openbabel
 - pyscf
 - python_install
 - moldesign_complete
 - moldesign_notebook


##################################################
# Bases for running command line and python tools
base:  # cache-buster - build this with --no-cache to force a complete rebuild.
 FROM: debian:jessie

python_install:
 requires:
  - base
 build: |
  RUN apt-get update \
    && apt-get install -y --no-install-recommends \
         python \
         python-numpy \
         python-scipy \
         python-yaml \
         python-zmq \
         python-tornado \
         pkg-config \
         libpng12-dev \
         wget \
    && wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py \
    && apt-get -y clean \
    && apt-get -y remove wget \
    && apt-get autoremove -y --purge \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
  RUN mkdir -p /opt
  ENV PYTHONPATH=/opt

devtools:
 description: |
   A dev environment - intended to be mixed in to other images. Any images that require devtools
   are not production-ready.
 requires:
  - python_install
 build: |
  RUN apt-get -y install \
      build-essential \
      libcr-dev \
      mpich2 \
      mpich2-doc \
      cmake \
      git \
      subversion \
      mercurial \
      libfftw3-dev \
      libbz2-dev \
      libopenmpi-dev \
      libtool \
      swig \
      wget \
      liblapack-dev \
      libblas-dev \
      gfortran \
      csh \
      tcsh \
      cmake-curses-gui \
      libhdf5-dev \
      libatlas-dev \
      liblapack-dev \
      patch \
      autoconf \
      automake \
      libnetcdf-dev \
      doxygen
  ENV TERM=dumb


############################################
# moldesign
# Note - this image installs from GITHUB MASTER so that we can test it before pushing to pypi
moldesign:
 requires:  # TODO: remove biopython dependency (it's in C ...)
  - python_install
 build_directory: moldesign
 build: |
  RUN apt-get update && apt-get install -y gcc gfortran python-dev git \
   && pip install biopython \
   && pip install git+https://github.com/Autodesk/molecular-design-toolkit@master \
   && apt-get -y remove --purge gcc gfortran python-dev git \
   && apt-get -y autoremove --purge \
   && apt-get -y clean


pyccc:
 requires:
  - python_install
 build: |
  RUN pip install pyccc


nbmolviz:
 requires:
  - python_install
 build: |
  RUN pip install nbmolviz
  RUN jupyter nbextension enable --python --sys-prefix nbmolviz &&
      jupyter nbextension enable --python --sys-prefix widgetsnbextensions


moldesign_notebook:
 description: A production-ready, fully outfitted jupyter server container
 requires:
  - chem_python
  - notebook
  - moldesign
 build: |
  RUN cp -r /usr/local/lib/python2.7/dist-packages/moldesign/_notebooks /notebooks/moldesign_examples
  RUN jupyter nbextension enable --python --sys-prefix widgetsnbextension \
   && jupyter nbextension enable --python --sys-prefix nbmolviz



moldesign_complete:
  description: An image with moldesign and all its dependencies
  requires:
   - moldesign_notebook
  build: |
   ENTRYPOINT []
   CMD ''


#########################################
# Command line chemistry
opsin:
 FROM: java
 build: |
  RUN mkdir -p /opt/opsin && cd /opt/opsin && \
    wget https://bitbucket.org/dan2097/opsin/downloads/opsin-2.0.0-jar-with-dependencies.jar
  RUN cmd='java -jar /opt/opsin/opsin-2.0.0-jar-with-dependencies.jar' && \
    printf "#!/bin/bash\n$cmd \$@\n" > /usr/local/bin/opsin && \
    chmod +x /usr/local/bin/opsin


ambertools:
 requires:
  - python_install
 build_directory: ambertools
 build: |
    ENV AMBERHOME /opt/amber16/
    ENV PATH /opt/amber16/bin:$PATH
    RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         flex \
         bison \
         csh \
         gfortran \
         g++ \
         libbz2-dev \
         libnetcdf-dev \
         libfftw3-dev \
         libnetcdf-dev \
         make \
         patch \
         python-dev \
         bzip2 \
         wget \
     && cd /opt \
     && echo 'Expanding tar archive AmberTools16.tar.bz2 ...' \
     && wget -nv "http://ambermd.org/cgi-bin/AmberTools16-get.pl?Name=AaronVirshup&Institution=Autodesk&City=SanFrancisco&State=CA&Country=USA" -O \
           /opt/AmberTools16.tar.bz2 \
     && tar -xjf AmberTools16.tar.bz2 && rm AmberTools16.tar.bz2 \
     && cd /opt/amber16 \
     && echo Y | ./configure -noX11 --with-python /usr/bin/python --with-netcdf /usr/ gnu \
     && make -j6 install \
     && rm -rf test AmberTools doc  # reduce image size after the build \
     && apt-get -y remove --purge \
         gfortran \
         g++ \
         python-dev \
         wget \
     && apt-get -y clean \
     && apt-get autoremove -y --purge \
     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    RUN cd /opt/amber16 \
      && echo "test -f /opt/amber16/amber.sh \
      && source /opt/amber16/amber.sh" >> /root/.bash_profile

symmol:
 requires:
  - base
 build_directory: symmol
 build: |
  RUN mkdir -p /src/symmol
  ADD symmol.f /src/symmol/symmol.f
  RUN apt-get update \
   && apt-get install -y --no-install-recommends \
         gfortran libgfortran3\
   && cd /src/symmol \
   && gfortran symmol.f -o symmol \
   && apt-get -y remove --purge \
       gfortran \
   && apt-get -y clean \
   && apt-get autoremove -y --purge \
   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
  RUN mv /src/symmol/symmol /usr/local/bin


########################
# Python tools
notebook:
 requires:
  - python_install
 build_directory: notebook/
 build: |
    RUN apt-get update \
       && apt-get -y install python-matplotlib \
       && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    RUN pip install \
        jupyter \
        ipywidgets
    ENTRYPOINT /run_notebook.sh
    EXPOSE 8888
    RUN mkdir /notebooks
    WORKDIR /notebooks
    COPY run_notebook.sh /run_notebook.sh

openmm: # NEWFEATURE: add GPU support (opencl/cuda)
 description: Basic OpenMM install (CPU only) with python bindings
 build_directory: openmm
 requires:
  - python_install
 build: |
  RUN mkdir -p /src
  ADD OpenMM-7.0.0-Linux.zip /src/OpenMM.zip
  RUN apt-get update \
   && apt-get install -y \
       gcc \
       g++ \
       python-dev \
       zip \
   && cd /src/ \
   && unzip OpenMM.zip && rm OpenMM.zip \
   && cd /src/OpenMM-7.*-Linux \
   && cat < echo "\n\n" | ./install.sh \
   && rm -rf examples docs \
   && apt-get -y remove --purge \
       gcc \
       g++ \
       python-dev \
       zip \
   && apt-get -y clean \
   && apt-get autoremove -y --purge \
   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


pdbfixer:
 requires:
  - openmm
 build: |
  RUN pip install https://github.com/pandegroup/pdbfixer/archive/v1.2.tar.gz

pyscf:
 requires:
  - python_install
 build: |
  RUN apt-get update && apt-get install -y \
    cmake \
    python-h5py \
    g++ \
    wget \
    git \
    gfortran \
   && cd /opt \
     && wget -nv https://github.com/sunqm/pyscf/archive/v1.1.1.tar.gz \
     && tar xvzf v1.1.1.tar.gz && rm v1.1.1.tar.gz \
     && mv pyscf-1.1.1 pyscf \
   && cd /opt/pyscf/lib \
     && mv CMakeLists.txt CMakeLists.txt.old \
     && sed -e "s/libcint\.git/qcint.git/" CMakeLists.txt.old > CMakeLists.txt \
     && mkdir build && cd build && cmake .. && make \
   && apt-get -y remove --purge \
       cmake \
       g++ \
       wget \
       git \
       gfortran \
   && apt-get -y clean \
   && apt-get autoremove -y --purge \
   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

openbabel:
 requires:
  - python_install
 build: |
  RUN apt-get update && apt-get install -y \
    openbabel \
    python-openbabel \
   && apt-get -y clean \
   && apt-get autoremove -y --purge \
   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

pyquante2:
 requires:
  - python_install
 build: |
  RUN pip install git+git://github.com/rpmuller/pyquante2.git

chem_python:
 description: All of the external python chemistry libraries in one place
 requires:
  - openbabel
  - openmm
  - pyscf
  - pdbfixer

chem_notebook:
 requires:
  - notebook
  - chem_python



########################
# Still being developed
# These images will be huge and shouldn't be deployed

cuda7_0:
 requires:
  - devtools
 build: |
  RUN wget -nv http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.0-28_amd64.deb
  RUN dpkg -i cuda-repo-ubuntu1404_7.0-28_amd64.deb && apt-get update && apt-get -y install cuda



nwchem:
 requires:
  - devtools
 build_directory: nwchem/
 build: |
  RUN cd /opt \
   && wget --trust-server-names -nv http://www.nwchem-sw.org/download.php?f=Nwchem-6.6.revision27746-srconly.2015-10-20.tar.bz2 \
   && tar xjf Nwchem-6.6.revision27746-srconly.2015-10-20.tar.bz2 \
   && rm Nwchem-6.6.revision27746-srconly.2015-10-20.tar.bz2
  ENV MPI_LOC=/usr \
      MPI_INCLUDE=/usr/include/mpich \
      MPI_LIB=/usr/lib \
      NWCHEM_TOP=/opt/nwchem-6.6 \
      NWCHEM_TARGET=LINUX64 \
      NWCHEM_MODULES=all \
      USE_MPI=y USE_MPIF=y \
      HAS_BLAS=yes \
      LIBMPI='-lfmpich -lmpich' \
      NWCHEM_TARGET=LINUX64 \
      BLASOPT="-lblas -lpthread -lrt" \
      BLAS_SIZE=4 \
      USE_64TO32=y
  RUN cd $NWCHEM_TOP/src && make nwchem_config && make -j4 | tee make.log


nbo: # This ISN'T open source - we'll provide the dockerfile, but users must supply the source code
 requires:
  - devtools
 build_directory: nbo6_0
 build: |
  ADD nbo6.0-src.tar.gz /opt/
  RUN cd /opt/nbo6 && sed -i.orig -e 's/NBODIR = \~\/nbo6/NBODIR = \/opt\/nbo6/g' Make.config
  RUN cd /opt/nbo6 && make
  RUN ln -s /opt/nbo6/bin/*.exe /usr/local/bin/
  ENV NBOEXE=/opt/nbo6/bin/nbo6.i4.exe


gamess:
 requires:
  - devtools
 build_directory: gamess
 build: |
  RUN apt-get install -y libatlas-base-dev
  ADD gamess-current.tar.gz /opt
  ADD config.tar /opt
  RUN cd /opt/gamess/ddi \
   && ./compddi | tee compddi.log \
   && mv ddikick.x .. \
   && cd /opt/gamess \
   && ./compall | tee compall.log \
   && ./lked gamess 00 | tee lked.log \
   && mkdir -p /scr/root /root/scr \
   && ln -s /opt/gamess/rungms /usr/local/bin/rungms
